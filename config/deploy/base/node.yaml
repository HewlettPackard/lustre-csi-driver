# Note: Editing this file might carry consequences, as key values are patched by kustomize. Please
#       see the overlays {lustre,mock} for the path layout and assumptions
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-node
spec:
  selector:
    matchLabels:
      cray.nnf.node: "true"
  template:
    metadata:
      labels:
        cray.nnf.node: "true"
    spec:
      nodeSelector:
        cray.nnf.node: "true"
      tolerations:
      - key: "cray.nnf.node"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      containers:
        # NOTE: csi-node-driver must be listed first as the kustomization overlay assumes index zero
        - name: csi-node-driver
          image: controller:latest
          args:
           - --driver=
          securityContext:
            # This is necessary only for systems with SELinux, where the CSI driver needs
            # to mount the mount-dir with bidirectional mount propagation.
            privileged: true
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: X_CSI_DEBUG
              value: "true"
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: mount-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional

        # The node-driver-registrar is a sidecar container that registers the CSI driver with Kubelet
        # using the kubelet plugin registration mechanism. This is necessary because Kubelet is
        # responsible for issuing CSI NodeGetInfo, NodeStageVolume, NodePublishVolume calls. The
        # node-driver-registrar registers your CSI driver with Kubelet so that it knows which Unix
        # domain socket to issue the CSI calls on.
        #
        # NOTE: csi-node-driver-registrar must be listed second as the kustomization overlay assumes index one
        - name: csi-node-driver-registrar
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.3.0
          args:
            - --v=5
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path=/var/lib/kubelet/plugins/$(CSI_DRIVER)/csi.sock
          securityContext:
            # This is necessary only for systems with SELinux, where non-privileged sidcar containers
            # cannot access unix domain socket created by privileged CSI driver container.
            privileged: true
          env:
            # NOTE: CSI_DRIVER must be listed first as the kustomization overlay assumes index zero
            - name: CSI_DRIVER
              value: .csi.nnf.cray.hpe.com
            # TODO: Lookup why this is needed for the driver-registrar; I see it in the host-path driver
            # but there is no explination as to why the registrar needs it.
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration

      volumes:
        # This volume is where the socket for the kubelet->driver communication is done.
        # NOTE: socket-dir must be listed first as the kustomization overlay assumes index zero
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/.csi.nnf.cray.hpe.com/
            type: DirectoryOrCreate
        # This volume is where the driver mounts volumes. Must be set to Bidirectional to allow kubelet on the host to see mounts created by the CSI driver container.
        - name: mount-dir
          hostPath:
            path: /var/lib/kubelet/pods/
            type: Directory
        # This volume is where the node-driver-registrar registers the plugin with kubelet
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: plugins-dir
          hostPath:
            path: /var/lib/kubelet/plugins/
            type: Directory
        
